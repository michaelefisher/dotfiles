## aliases
if [ -f ~/.aliases ]; then
    . ~/.aliases
fi

export HISTTIMEFORMAT='%d/%m/%y %T '
export EDITOR="vim"

for key in "michaelfisher"; do
	if [[ -s ~/.ssh/${key} ]]; then
		ssh-add ~/.ssh/${key};
	fi
done

export GIT="$HOME/git"
function dateu() {
  date --date="@$1"
}

function timestamp() {
  date -j -f "%b %d %T %Z %Y" "${1}" "+%s"
}

# tabtab source for serverless package
# uninstall by removing these lines or running `tabtab uninstall serverless`
[ -f ${HOME}/.nvm/versions/node/v6.14.2/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.bash ] && . ${HOME}/.nvm/versions/node/v6.14.2/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.bash
# tabtab source for sls package
# uninstall by removing these lines or running `tabtab uninstall sls`
[ -f ${HOME}/.nvm/versions/node/v6.14.2/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.bash ] && . ${HOME}/.nvm/versions/node/v6.14.2/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.bash
# tabtab source for slss package
# uninstall by removing these lines or running `tabtab uninstall slss`
[ -f ${HOME}/.nvm/versions/node/v6.14.2/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.bash ] && . ${HOME}/.nvm/versions/node/v6.14.2/lib/node_modules/serverless/node_modules/tabtab/.completions/slss.bash


# tabtab source for packages
# uninstall by removing these lines
[ -f ~/.config/tabtab/__tabtab.bash ] && . ~/.config/tabtab/__tabtab.bash || true

# z.sh
z() { . "{{ .chezmoi.homeDir }}/bin/z/z.sh" "$@" ; }

bindkey -v
bindkey '^R' history-incremental-search-backward
bindkey "^A" vi-beginning-of-line
bindkey "^E" vi-end-of-line

# Export PATH here
{{ if eq .chezmoi.os "linux" -}}
export PATH="/usr/local/sbin:/usr/local/opt/openjdk/bin:$HOME/.pyenv/shims/:$HOME/.linuxbrew/bin:$HOME/.linuxbrew/sbin:/$HOME/bin:$PATH"
{{ else }}
export PATH="/usr/local/sbin:/usr/local/opt/openjdk/bin:$HOME/.pyenv/shims/:$HOME/bin/:/opt/homebrew/bin/:$PATH"
{{ end }}
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

{{ if eq .chezmoi.os "darwin" -}}
if [[ -d "$(brew --prefix)/Caskroom/google-cloud-sdk/google-cloud-sdk/" ]]; then
  source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"
  source "$(brew --prefix)/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"
  export LDFLAGS="-L/usr/local/opt/bzip2/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib"
  export CFLAGS="-I/usr/local/opt/bzip2/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -I$(xcrun --show-sdk-path)/usr/include -Wno-implicit-function-declaration"
fi
{{ end -}}

# git
fixup() { /usr/bin/git add --all && /usr/bin/git commit -m "fixup" --allow-empty && /usr/bin/git rebase -i "$@" ; }

# urldecode
urldecode() { : "${*//+/ }"; echo -e "${_//%/\\x}"; }

# Start starship
eval "$(starship init zsh)"

autoload -U compinit && compinit
