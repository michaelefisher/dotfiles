## aliases
if [ -f ~/.aliases ]; then
    source ~/.aliases
fi

export HISTTIMEFORMAT='%d/%m/%y %T '
if [[ "$TERM_PROGRAM" == 'vscode' ]]; then
	export EDITOR="code --wait"
else
	export EDITOR="vim"
fi

export GIT="$HOME/git"
function dateu() {
  date --date="@$1"
}

function timestamp() {
  date -j -f "%b %d %T %Z %Y" "${1}" "+%s"
}

# z.sh
z() { . "{{ .chezmoi.homeDir }}/bin/z/z.sh" "$@" ; }

bindkey -v
bindkey '^R' history-incremental-search-backward
bindkey "^A" vi-beginning-of-line
bindkey "^E" vi-end-of-line


# Export PATH here
{{ if eq .chezmoi.os "linux" -}}
export PATH="/usr/local/sbin:/usr/local/opt/openjdk/bin:$HOME/.pyenv/shims/:$HOME/.linuxbrew/bin:/home/linuxbrew/.linuxbrew/bin:$HOME/bin:$HOME/google-cloud-sdk/bin:$PATH"
export DOCKER_HOST=unix:///run/user/1000/docker.sock
{{ else }}
export PATH="/usr/local/sbin:/usr/local/opt/openjdk/bin:$HOME/.pyenv/shims/:$HOME/bin/:/opt/homebrew/bin/:$HOME/go/bin:/opt:$HOME/.deno/bin/:$PATH"
export DOCKER_HOST=unix:///Users/fisher/.colima/default/docker.sock
{{ end }}

export PYENV_ROOT="$HOME/.pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
export CLOUDSDK_PYTHON=$(pyenv which python)
eval "$(pyenv init -)"

{{ if eq .chezmoi.os "darwin" -}}
  export LDFLAGS="-L/usr/local/opt/bzip2/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl@1.1/lib"
  export CFLAGS="-I/usr/local/opt/bzip2/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl@1.1/include -I$(xcrun --show-sdk-path)/usr/include -Wno-implicit-function-declaration"
{{ end -}}

# The next line updates PATH for the Google Cloud SDK.
if [ -f "${HOME}/google-cloud-sdk/path.zsh.inc" ]; then . "${HOME}/google-cloud-sdk/path.zsh.inc"; fi

# The next line enables shell command completion for gcloud.
if [ -f "${HOME}/google-cloud-sdk/completion.zsh.inc" ]; then . "${HOME}/google-cloud-sdk/completion.zsh.inc"; fi

# git
fixup() { /usr/bin/git commit -m "fixup" --allow-empty && /usr/bin/git rebase -i "$@" ; }

# urldecode
urldecode() { : "${*//+/ }"; echo -e "${_//%/\\x}"; }

# view octal
octal() { stat -f "%OLp" $1; }

if [ $(ps ax | grep "[s]sh-agent" | wc -l) -eq 0 ] ; then
    eval $(ssh-agent -s) > /dev/null
    if [ "$(ssh-add -l)" = "The agent has no identities." ] ; then
        # Auto-add ssh keys to ssh agent
        ssh-add ~/.ssh/id_ed25519 > /dev/null 2>&1
    fi
fi

# Activate gcloud configs
activate() { gcloud config configurations activate "$@" ; }
# Sign in to op
signin() { eval $(op signin "$@") ; }

{{ if eq .chezmoi.os "darwin"  -}}
# motd supervision
if [[ -f /home/fisher/git/tinymotd/data/motd ]]; then
    cat /home/fisher/git/tinymotd/data/motd
fi
{{ end -}}

{{ if eq .chezmoi.os "linux" -}}
test -f $HOME/.config/op/plugins.sh && source $HOME/.config/op/plugins.sh
test -f /usr/share/google-cloud-sdk/completion.zsh.inc && source /usr/share/google-cloud-sdk/completion.zsh.inc
{{ end -}}

# k8s
creds() {
	gcloud container clusters get-credentials "$1" --zone us-central1-a --project "$2"
}

# Start starship
eval "$(starship init zsh)"

# terraform
# params:
# $1	terraform command
#terraform() {
#    if [[ "$(pwd)" == "${HOME}/git/terraform-google-cloud" ]]; then
#		pushd modules/regions/us-central1;
#		test "$1" != "" && command terraform "$@";
#		popd;
#    else
#		command terraform "$@";
#    fi
#}

source ~/.octavia-zshrc

merge() { gh pr merge "$1" --admin }

autoload -Uz compinit && compinit

